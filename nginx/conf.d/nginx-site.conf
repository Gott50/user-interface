# pushState friendly!
# The setup:
#   * javascript app is located at `${APP_DIR}`

charset utf-8;

tcp_nopush on;
tcp_nodelay off;
client_header_timeout ${CLIENT_HEADER_TIMEOUT}s;
client_body_timeout ${CLIENT_BODY_TIMEOUT}s;
client_max_body_size ${CLIENT_MAX_BODY_SIZE}k;
reset_timedout_connection on;

gzip_types
    text/css
    text/javascript
    text/xml
    text/plain
    application/javascript
    application/x-javascript
    application/json
    application/xml
    application/rss+xml
    application/atom+xml
    font/truetype
    font/opentype
    image/svg+xml;

server {
  listen 80;
  root ${APP_DIR};

  error_page 404 @rewrites;

  # API Proxy
  location ${APP_API_PLACEHOLDER}/ {
    # Redefine the header fields that NGINX sends to the upstream server
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

    # Define the location of the proxy server to send the request to
    proxy_pass       ${APP_API_GATEWAY};

    # Define the maximum file size on file uploads
    client_max_body_size 5M;
  }

  # PREFIX PATH
  location ${APP_PATH_PREFIX}/ {
    rewrite ^${APP_PATH_PREFIX}/(.*) /$1  last;
  }

  # To make sure any assets can get through :)
  location / {
    try_files $uri @rewrites;

    set $use_white_list "${WHITE_LIST}";
		if ($use_white_list = "off") {
			break;
		}

		if ($proxy_add_x_forwarded_for !~ "^${WHITE_LIST_IP}$") {
			return 403;
		}
  }
  # If no asset matches, send it to your javascript app. Hopefully it's a route in the app!
  location @rewrites {
    rewrite ^(.+)$ /index.html last;
  }
}
